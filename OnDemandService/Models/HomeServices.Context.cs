//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnDemandService.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HomeServicesEntities : DbContext
    {
        public HomeServicesEntities()
            : base("name=HomeServicesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CardInformation> CardInformations { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Complaint> Complaints { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CustomerComplaint> CustomerComplaints { get; set; }
        public virtual DbSet<IsNotificationShown> IsNotificationShowns { get; set; }
        public virtual DbSet<LeadDetail> LeadDetails { get; set; }
        public virtual DbSet<OrderRequest> OrderRequests { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderWithProfessional> OrderWithProfessionals { get; set; }
        public virtual DbSet<PaymentData> PaymentDatas { get; set; }
        public virtual DbSet<PaymentMethod> PaymentMethods { get; set; }
        public virtual DbSet<PaymentType> PaymentTypes { get; set; }
        public virtual DbSet<Pincode> Pincodes { get; set; }
        public virtual DbSet<RechargeOrder> RechargeOrders { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<ServiceProvided> ServiceProvideds { get; set; }
        public virtual DbSet<SubCategory> SubCategories { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<PartnerProfessional> PartnerProfessionals { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductCategory> ProductCategories { get; set; }
        public virtual DbSet<DeviceToken> DeviceTokens { get; set; }
    
        public virtual int InsertOrderWithProfessional(Nullable<int> orderId, Nullable<int> professionalId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var professionalIdParameter = professionalId.HasValue ?
                new ObjectParameter("ProfessionalId", professionalId) :
                new ObjectParameter("ProfessionalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertOrderWithProfessional", orderIdParameter, professionalIdParameter);
        }
    }
}
